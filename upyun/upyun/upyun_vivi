#!/bin/env python
# -*- coding: utf-8 -*-

DOCUMENTATION = '''
---
module: upyun_vivi_
version_added: "beta"
short_description: get upyun facts
description:
    - get upyun related upyuns
options:
  filter:
    description:
      - match the variable name
    required: False
    default: all
    aliases: []
author: Min.Ai
'''

EXAMPLES = '''
get infomation of container named example

- hosts: upyun_host
  tasks:
  upyun_vivi:
'''
 
import re
import os
import subprocess

class UpYunVivi:
    def __init__(self, module):
        self.module = module
        self.name = self.module.params.get('filter')

    def all_var(self):
        result = {}
        command = ['bash', '-c', 'set -a && source /etc/upyun.cfg && env']
        proc = subprocess.Popen(command, stdout = subprocess.PIPE)
        for line in proc.stdout:
            if '=' in line:
                (key, _, value) = line.partition("=")
                value = value.rstrip('\n')
                if key == "CDN_API_BOTH":
#                   result['CDN_API_BOTH'] = [ i.split('#')[0] for i in value.split() ]
                   result['CDN_API_BOTH'] =  value.strip('\n').split('#')[0].split('@')
                elif key in ["NGINX_API_UPSTREAM_CNC", "NGINX_API_UPSTREAM_CTC"]:
                   result[key] = value.split()

        proc.communicate()

        return result

def main():
    module = AnsibleModule(
        argument_spec = dict(
            filter = dict(default=''), 
        )
    )

    try:
        facter = UpYunVivi(module)
        facts = facter.all_var()
        module.exit_json(changed=False, ansible_facts=facts)

    except Exception, e:
        module.fail_json(changed=False, msg=repr(e))

# import module snippets
from ansible.module_utils.basic import *
main()
